from entities.Car import Car, add_car, get_all_cars, update_car, delete_car
from entities.Customer import Customer, get_all_customers, add_customer, update_customer, delete_customer
from entities.Worker import Worker, add_worker, get_all_workers, update_worker, delete_worker


def main():
    logged_in = login()

    if not logged_in:
        print("Login failed. Exiting the program.")
        return

    while True:
        print("\nMenu:")
        print("1. Add a new car")
        print("2. Get all cars")
        print("3. Update car details")
        print("4. Delete a car")
        print("5. Add a new customer")
        print("6. Get all customers")
        print("7. Update customer details")
        print("8. Delete a customer")
        print("9. Add a new worker")
        print("10. Get all workers")
        print("11. Update worker details")
        print("12. Delete a worker")
        print("13. Exit")

        choice = input("Enter your choice: ")
        print("---------------------------------")

        if choice == "1":
            add_car()
        elif choice == "2":
            get_all_cars()
        elif choice == "3":
            update_car()
        elif choice == "4":
            delete_car()
        elif choice == "5":
            add_customer()
        elif choice == "6":
            get_all_customers()
        elif choice == "7":
            update_customer()
        elif choice == "8":
            delete_customer()
        elif choice == "9":
            add_worker()
        elif choice == "10":
            get_all_workers()
        elif choice == "11":
            update_worker()
        elif choice == "12":
            delete_worker()
        elif choice == "13":
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please try again.")


def login():
    username = input("Enter your username: ")
    password = input("Enter your password: ")

    if username == "admin" and password == "rac_444":
        return True
    else:
        return False


if __name__ == "__main__":
    main()